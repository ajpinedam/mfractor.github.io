<?xml version="1.0" encoding="utf-16"?>
<Manifest xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Tips>
    <Tip>
      <Title>Generate Interface Implementation</Title>
      <Description>Need to implement an interface? Tap Alt+Return on an interface and use the Generate Interface action to create a class implementing that interface.</Description>
      <Image>img/code-actions/csharp/generate-interface.gif</Image>
      <FeatureUrl>code-actions/csharp#generate-interface-implementation</FeatureUrl>
      <Identifier>com.mfractor.code_actions.csharp.generate_interface_implementation</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Go To Implementation</Title>
      <Description>You can use MFractors Go-To Implementation shortcut to find classes that implement that interface and then jump to that class!</Description>
      <Image>img/code-actions/csharp/go-to-implementation.gif</Image>
      <FeatureUrl>code-actions/csharp#go-to-implementation</FeatureUrl>
      <Identifier>com.mfractor.code_actions.csharp.go_to_interface_implementation</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Generate Event Handler</Title>
      <Description>Need to create a new event handler? Use the Generate Missing Event Handler code fix to generate an event handler method on the code behind class.</Description>
      <Image>img/code-actions/xaml/fix/generate-event-handler.gif</Image>
      <FeatureUrl>code-actions/xaml/fix#generate-event-handler</FeatureUrl>
      <Identifier>com.mfractor.code_fixes.xaml.generate_event_handler</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Generate XAML View From XAML Node</Title>
      <Description>Did you know you can create new controls from XAML? Right click on a missing control in XAML to create a new control implementation!</Description>
      <Image>img/code-actions/xaml/fix/generate-custom-controls.gif</Image>
      <FeatureUrl>code-actions/xaml/fix#generate-xaml-view-from-xaml-node</FeatureUrl>
      <Identifier>com.mfractor.code_fixes.xaml.generate_missing_class_as_xaml_view</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Import Namespace And Assembly For Unresolved XAML Node</Title>
      <Description>Use the Import Reference fix to generate an xmlns namespace import for a missing control in your XAML.</Description>
      <Image>img/code-actions/xaml/fix/import-xaml-node.gif</Image>
      <FeatureUrl>code-actions/xaml/fix#import-namespace-and-assembly-for-unresolved-xaml-node</FeatureUrl>
      <Identifier>com.mfractor.code_fixes.xaml.import_reference</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Generate Effect From XAML Declaration</Title>
      <Description>Use the Generate Effect code action to create an effect and it's platform specific implementations</Description>
      <Image>img/code-actions/xaml/generate/generate-effect.gif</Image>
      <FeatureUrl>code-actions/xaml/generate#generate-effect-from-xaml-declaration</FeatureUrl>
      <Identifier>com.mfractor.code_actions.xaml.generate_platform_effect</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Go To Code Behind Class</Title>
      <Description>When you are in a ViewModel or XAML file, the Go-To Code Behind code action will navigate you to it's code behind class</Description>
      <Image>img/code-actions/xaml/navigate/go-to-code-behind.gif</Image>
      <FeatureUrl>code-actions/xaml/navigate#go-to-code-behind-class</FeatureUrl>
      <Identifier>com.mfractor.navigation.forms.go_to_code_behind</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Go To XAML View</Title>
      <Description>When you are in a ViewModel or code-behind, the Go-To Code XAML View code action will navigate you to it's XAML view.</Description>
      <Image>img/code-actions/xaml/navigate/go-to-xaml-view.gif</Image>
      <FeatureUrl>code-actions/xaml/navigate#go-to-xaml-view</FeatureUrl>
      <Identifier>com.mfractor.navigation.forms.go_to_view</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Go To View Model</Title>
      <Description>When you are in a XAML file or it's code behind, the Go-To ViewModel code action will infer your view model and navigate to it.</Description>
      <Image>img/code-actions/xaml/navigate/go-to-view-model.gif</Image>
      <FeatureUrl>code-actions/xaml/navigate#go-to-view-model</FeatureUrl>
      <Identifier>com.mfractor.navigation.forms.go_to_view_model</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Edit Color Declaration</Title>
      <Description>Use the Edit Color code action to visually edit a color from your Xaml.</Description>
      <Image>img/code-actions/xaml/refactor/edit-color.gif</Image>
      <FeatureUrl>code-actions/xaml/refactor#edit-color-declaration</FeatureUrl>
      <Identifier>com.mfractor.code_actions.xaml.edit_color</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Migrate OnPlatform Usage</Title>
      <Description>Use the Migrate OnPlatform code action to convert OnPlatform declarations to the Xamarin.Forms 2.3.4 format.</Description>
      <Image>img/code-actions/xaml/refactor/migrate-onplatform.gif</Image>
      <FeatureUrl>code-actions/xaml/refactor#migrate-onplatform-usage</FeatureUrl>
      <Identifier>com.mfractor.code_actions.xaml.migrate_on_platform_usage</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Replace String With Localisation Lookup</Title>
      <Description>Need to localise your XAML? MFractors localisation wizard moves string literals into RESX files and replaces that string with a localisation lookup!</Description>
      <Image>img/code-actions/xaml/refactor/localise-xaml.gif</Image>
      <FeatureUrl>code-actions/xaml/refactor#replace-string-with-localisation-lookup</FeatureUrl>
      <Identifier>com.mfractor.code_actions.xaml.replace_with_localisation_lookup</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Generate New View Model</Title>
      <Description>Use the Generate View Model code action to create a new view model for a XAML file with default implementations of each data-binding!</Description>
      <Image>img/code-actions/xaml/generate/generate-view-model.gif</Image>
      <FeatureUrl>code-actions/xaml/generate#generate-new-view-model</FeatureUrl>
      <Identifier>com.mfractor.code_actions.xaml.implement_view_model</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Implement Missing Members</Title>
      <Description>Use the Generate Bindable Properties code action to quickly create new bindable properties; it'll even figure out the property types for you!</Description>
      <Image>img/code-actions/xaml/generate/generate-bindable-properties.gif</Image>
      <FeatureUrl>code-actions/xaml/generate#implement-missing-members</FeatureUrl>
      <Identifier>com.mfractor.code_actions.xaml.implement_missing_members</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Generate Xaml Localisation Infrastructure</Title>
      <Description>The Generate Localisation Infrastructure code action creates the necessary code files to power XAML localisation according to Xamarins best practices.</Description>
      <Image>img/code-actions/xaml/generate/generate-localisation-infrastructure.gif</Image>
      <FeatureUrl>code-actions/xaml/generate#generate-xaml-localisation-infrastructure</FeatureUrl>
      <Identifier>com.mfractor.code_actions.xaml.generate_xaml_localisation_infrastructure</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Import Missing Image Resource</Title>
      <Description>When you are missing an image resource, MFractor will warn you and give you the option to import it into your Android and iOS projects.</Description>
      <Image>img/code-actions/xaml/fix/import-image-fix.gif</Image>
      <FeatureUrl>code-actions/xaml/fix#import-missing-image-resource</FeatureUrl>
      <Identifier>com.mfractor.code_fixes.xaml.import_missing_image_resource</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
    <Tip>
      <Title>Replace String With Resource Lookup</Title>
      <Description>You can use the localisation wizard to find and move all C# strings into a RESX file, replacing the original string with a resource lookup!</Description>
      <Image>img/code-actions/csharp/localise-csharp.gif</Image>
      <FeatureUrl>code-actions/csharp#replace-string-with-resource-lookup</FeatureUrl>
      <Identifier>com.mfractor.code_actions.resx.replace_csharp_string_with_resource_lookup</Identifier>
      <IsRemote>true</IsRemote>
    </Tip>
  </Tips>
</Manifest>